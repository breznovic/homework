{"ast":null,"code":"var _jsxFileName = \"/home/breznovic/React/homework/src/s2-homeworks/hw04/common/c3-SuperCheckbox/SuperCheckbox.tsx\";\nimport React from 'react';\nimport s from './SuperCheckbox.module.css';\n\n// тип пропсов обычного инпута\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SuperCheckbox = _ref => {\n  let {\n    onChange,\n    onChangeChecked,\n    className,\n    spanClassName,\n    children,\n    // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\n    id,\n    ...restProps // все остальные пропсы попадут в объект restProps\n  } = _ref;\n  const onChangeCallback = e => {\n    onChange && onChange(e); // сделайте так чтоб работал onChange и onChangeChecked\n    onChangeChecked && onChangeChecked(e.currentTarget.checked);\n  };\n  const finalInputClassName = s.checkbox + (className ? ' ' + className : '');\n  return /*#__PURE__*/_jsxDEV(\"label\", {\n    className: s.label,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      id: id,\n      type: 'checkbox',\n      onChange: onChangeCallback,\n      className: finalInputClassName,\n      ...restProps\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), children && /*#__PURE__*/_jsxDEV(\"span\", {\n      id: id ? id + '-span' : undefined,\n      className: s.spanClassName,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this) // благодаря label нажатие на спан передастся в инпут\n  ;\n};\n_c = SuperCheckbox;\nexport default SuperCheckbox;\nvar _c;\n$RefreshReg$(_c, \"SuperCheckbox\");","map":{"version":3,"names":["React","s","SuperCheckbox","onChange","onChangeChecked","className","spanClassName","children","id","restProps","onChangeCallback","e","currentTarget","checked","finalInputClassName","checkbox","label","undefined"],"sources":["/home/breznovic/React/homework/src/s2-homeworks/hw04/common/c3-SuperCheckbox/SuperCheckbox.tsx"],"sourcesContent":["import React, {\n    ChangeEvent,\n    DetailedHTMLProps,\n    InputHTMLAttributes,\n} from 'react'\nimport s from './SuperCheckbox.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>,\n    HTMLInputElement>\n\ntype SuperCheckboxPropsType = Omit<DefaultInputPropsType, 'type'> & {\n    onChangeChecked?: (checked: boolean) => void\n    spanClassName?: string\n}\n\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\n    {\n        onChange,\n        onChangeChecked,\n        className,\n        spanClassName,\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\n        id,\n\n        ...restProps // все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange && onChange(e)// сделайте так чтоб работал onChange и onChangeChecked\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\n    }\n\n    const finalInputClassName = s.checkbox\n        + (className ? ' ' + className : '')\n\n    return (\n        <label className={s.label}>\n            <input\n                id={id}\n                type={'checkbox'}\n                onChange={onChangeCallback}\n                className={finalInputClassName}\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\n            />\n            {children && (\n                <span\n                    id={id ? id + '-span' : undefined}\n                    className={s.spanClassName}\n                >\n                    {children}\n                </span>\n            )}\n        </label> // благодаря label нажатие на спан передастся в инпут\n    )\n}\n\nexport default SuperCheckbox\n"],"mappings":";AAAA,OAAOA,KAAK,MAIL,OAAO;AACd,OAAOC,CAAC,MAAM,4BAA4B;;AAE1C;AAAA;AASA,MAAMC,aAA+C,GAAG,QAWnD;EAAA,IAVD;IACIC,QAAQ;IACRC,eAAe;IACfC,SAAS;IACTC,aAAa;IACbC,QAAQ;IAAE;IACVC,EAAE;IAEF,GAAGC,SAAS,CAAC;EACjB,CAAC;EAED,MAAMC,gBAAgB,GAAIC,CAAgC,IAAK;IAC3DR,QAAQ,IAAIA,QAAQ,CAACQ,CAAC,CAAC;IACvBP,eAAe,IAAIA,eAAe,CAACO,CAAC,CAACC,aAAa,CAACC,OAAO,CAAC;EAC/D,CAAC;EAED,MAAMC,mBAAmB,GAAGb,CAAC,CAACc,QAAQ,IAC/BV,SAAS,GAAG,GAAG,GAAGA,SAAS,GAAG,EAAE,CAAC;EAExC,oBACI;IAAO,SAAS,EAAEJ,CAAC,CAACe,KAAM;IAAA,wBACtB;MACI,EAAE,EAAER,EAAG;MACP,IAAI,EAAE,UAAW;MACjB,QAAQ,EAAEE,gBAAiB;MAC3B,SAAS,EAAEI,mBAAoB;MAAA,GAC3BL;IAAS;MAAA;MAAA;MAAA;IAAA,QACf,EACDF,QAAQ,iBACL;MACI,EAAE,EAAEC,EAAE,GAAGA,EAAE,GAAG,OAAO,GAAGS,SAAU;MAClC,SAAS,EAAEhB,CAAC,CAACK,aAAc;MAAA,UAE1BC;IAAQ;MAAA;MAAA;MAAA;IAAA,QAEhB;EAAA;IAAA;IAAA;IAAA;EAAA,QACG,CAAC;EAAA;AAEjB,CAAC;AAAA,KAvCKL,aAA+C;AAyCrD,eAAeA,aAAa;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}