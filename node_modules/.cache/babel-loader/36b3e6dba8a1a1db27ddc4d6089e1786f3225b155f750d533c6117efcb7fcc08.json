{"ast":null,"code":"import _objectSpread from\"/home/breznovic/React/homework/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _objectWithoutProperties from\"/home/breznovic/React/homework/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";var _excluded=[\"onChange\",\"onChangeText\",\"onKeyPress\",\"onEnter\",\"error\",\"className\",\"spanClassName\",\"id\"];import React from'react';import s from'./SuperInputText.module.css';// тип пропсов обычного инпута\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var SuperInputText=function SuperInputText(_ref){var onChange=_ref.onChange,onChangeText=_ref.onChangeText,onKeyPress=_ref.onKeyPress,onEnter=_ref.onEnter,error=_ref.error,className=_ref.className,spanClassName=_ref.spanClassName,id=_ref.id,restProps=_objectWithoutProperties(_ref,_excluded);var onChangeCallback=function onChangeCallback(e){onChange===null||onChange===void 0?void 0:onChange(e);// если есть пропс onChange, то передать ему е (поскольку onChange не обязателен)\nonChangeText===null||onChangeText===void 0?void 0:onChangeText(e.currentTarget.value);};var onKeyPressCallback=function onKeyPressCallback(e){onKeyPress===null||onKeyPress===void 0?void 0:onKeyPress(e);onEnter&&// если есть пропс onEnter\ne.key==='Enter'&&// и если нажата кнопка Enter\nonEnter();// то вызвать его\n};var finalSpanClassName=s.error+(spanClassName?' '+spanClassName:'');var finalInputClassName=s.input+(error?' '+s.errorInput:' '+s.superInput)+(className?' '+className:'');// задача на смешивание классов\nreturn/*#__PURE__*/_jsxs(\"div\",{className:s.inputWrapper,children:[/*#__PURE__*/_jsx(\"input\",_objectSpread({id:id,type:'text',onChange:onChangeCallback,onKeyPress:onKeyPressCallback,className:finalInputClassName},restProps)),/*#__PURE__*/_jsx(\"span\",{id:id?id+'-span':undefined,className:finalSpanClassName,children:error})]});};export default SuperInputText;","map":{"version":3,"names":["React","s","SuperInputText","onChange","onChangeText","onKeyPress","onEnter","error","className","spanClassName","id","restProps","onChangeCallback","e","currentTarget","value","onKeyPressCallback","key","finalSpanClassName","finalInputClassName","input","errorInput","superInput","inputWrapper","undefined"],"sources":["/home/breznovic/React/homework/src/s2-homeworks/hw04/common/c1-SuperInputText/SuperInputText.tsx"],"sourcesContent":["import React, {\n    ChangeEvent,\n    DetailedHTMLProps,\n    InputHTMLAttributes,\n    KeyboardEvent,\n    ReactNode,\n} from 'react'\nimport s from './SuperInputText.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>,\n    HTMLInputElement>\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута, кроме type\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperInputTextPropsType = Omit<DefaultInputPropsType, 'type'> & {\n    // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: ReactNode\n    spanClassName?: string\n}\n\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\n    {\n        onChange,\n        onChangeText,\n        onKeyPress,\n        onEnter,\n        error,\n        className,\n        spanClassName,\n        id,\n\n        ...restProps // все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange?.(e) // если есть пропс onChange, то передать ему е (поскольку onChange не обязателен)\n\n        onChangeText?.(e.currentTarget.value)\n    }\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\n        onKeyPress?.(e)\n\n        onEnter && // если есть пропс onEnter\n        e.key === 'Enter' && // и если нажата кнопка Enter\n        onEnter() // то вызвать его\n    }\n\n    const finalSpanClassName = s.error\n        + (spanClassName ? ' ' + spanClassName : '')\n    const finalInputClassName = s.input\n        + (error ? ' ' + s.errorInput : ' ' + s.superInput)\n        + (className ? ' ' + className : '') // задача на смешивание классов\n\n    return (\n        <div className={s.inputWrapper}>\n            <input\n                id={id}\n                type={'text'}\n                onChange={onChangeCallback}\n                onKeyPress={onKeyPressCallback}\n                className={finalInputClassName}\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n            />\n            <span\n                id={id ? id + '-span' : undefined}\n                className={finalSpanClassName}\n            >\n                {error}\n            </span>\n        </div>\n    )\n}\n\nexport default SuperInputText\n"],"mappings":"qWAAA,MAAOA,MAAK,KAML,OAAO,CACd,MAAOC,EAAC,KAAM,6BAA6B,CAE3C;AAAA,wFAcA,GAAMC,eAAiD,CAAG,QAApDA,eAAiD,MAalD,IAXGC,SAAQ,MAARA,QAAQ,CACRC,YAAY,MAAZA,YAAY,CACZC,UAAU,MAAVA,UAAU,CACVC,OAAO,MAAPA,OAAO,CACPC,KAAK,MAALA,KAAK,CACLC,SAAS,MAATA,SAAS,CACTC,aAAa,MAAbA,aAAa,CACbC,EAAE,MAAFA,EAAE,CAECC,SAAS,0CAGhB,GAAMC,iBAAgB,CAAG,QAAnBA,iBAAgB,CAAIC,CAAgC,CAAK,CAC3DV,QAAQ,SAARA,QAAQ,iBAARA,QAAQ,CAAGU,CAAC,CAAC,CAAC;AAEdT,YAAY,SAAZA,YAAY,iBAAZA,YAAY,CAAGS,CAAC,CAACC,aAAa,CAACC,KAAK,CAAC,CACzC,CAAC,CACD,GAAMC,mBAAkB,CAAG,QAArBA,mBAAkB,CAAIH,CAAkC,CAAK,CAC/DR,UAAU,SAAVA,UAAU,iBAAVA,UAAU,CAAGQ,CAAC,CAAC,CAEfP,OAAO,EAAI;AACXO,CAAC,CAACI,GAAG,GAAK,OAAO,EAAI;AACrBX,OAAO,EAAE,CAAC;AACd,CAAC,CAED,GAAMY,mBAAkB,CAAGjB,CAAC,CAACM,KAAK,EAC3BE,aAAa,CAAG,GAAG,CAAGA,aAAa,CAAG,EAAE,CAAC,CAChD,GAAMU,oBAAmB,CAAGlB,CAAC,CAACmB,KAAK,EAC5Bb,KAAK,CAAG,GAAG,CAAGN,CAAC,CAACoB,UAAU,CAAG,GAAG,CAAGpB,CAAC,CAACqB,UAAU,CAAC,EAChDd,SAAS,CAAG,GAAG,CAAGA,SAAS,CAAG,EAAE,CAAC,CAAC;AAEzC,mBACI,aAAK,SAAS,CAAEP,CAAC,CAACsB,YAAa,wBAC3B,4BACI,EAAE,CAAEb,EAAG,CACP,IAAI,CAAE,MAAO,CACb,QAAQ,CAAEE,gBAAiB,CAC3B,UAAU,CAAEI,kBAAmB,CAC/B,SAAS,CAAEG,mBAAoB,EAC3BR,SAAS,EACf,cACF,aACI,EAAE,CAAED,EAAE,CAAGA,EAAE,CAAG,OAAO,CAAGc,SAAU,CAClC,SAAS,CAAEN,kBAAmB,UAE7BX,KAAK,EACH,GACL,CAEd,CAAC,CAED,cAAeL,eAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}