{"ast":null,"code":"var _jsxFileName = \"/home/breznovic/React/homework/src/s2-homeworks/hw03/GreetingContainer.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Greeting from \"./Greeting\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const pureAddUser = (name, setError, setName, addUserCallback) => {\n  // если имя пустое - показать ошибку, иначе - добавить юзера и очистить инпут\n};\nexport const pureOnBlur = (name, setError) => {\n  // если имя пустое - показать ошибку\n};\nexport const pureOnEnter = (e, addUser) => {\n  // если нажата кнопка Enter - добавить\n};\n\n// более простой и понятный для новичков\n// function GreetingContainer(props: GreetingPropsType) {\n\n// более современный и удобный для про :)\nconst GreetingContainer = _ref => {\n  _s();\n  let {\n    users,\n    addUserCallback\n  } = _ref;\n  // деструктуризация пропсов\n  const [name, setName] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const setNameCallback = e => {\n    const newName = e.target.value;\n    setName(newName); // need to fix\n\n    error && setError(\"\");\n  };\n  const addUser = () => {\n    pureAddUser(name, setError, setName, addUserCallback);\n  };\n  const onBlur = () => {\n    pureOnBlur(name, setError);\n  };\n  const onEnter = e => {\n    pureOnEnter(e, addUser);\n  };\n  const totalUsers = 0; // need to fix\n  const lastUserName = \"some name\"; // need to fix\n\n  return /*#__PURE__*/_jsxDEV(Greeting, {\n    name: name,\n    setNameCallback: setNameCallback,\n    addUser: addUser,\n    onBlur: onBlur,\n    onEnter: onEnter,\n    error: error,\n    totalUsers: totalUsers,\n    lastUserName: lastUserName\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n_s(GreetingContainer, \"b6YtcHgdEGD1oQUpHk75+4UrKwA=\");\n_c = GreetingContainer;\nexport default GreetingContainer;\nvar _c;\n$RefreshReg$(_c, \"GreetingContainer\");","map":{"version":3,"names":["React","useState","Greeting","pureAddUser","name","setError","setName","addUserCallback","pureOnBlur","pureOnEnter","e","addUser","GreetingContainer","users","error","setNameCallback","newName","target","value","onBlur","onEnter","totalUsers","lastUserName"],"sources":["/home/breznovic/React/homework/src/s2-homeworks/hw03/GreetingContainer.tsx"],"sourcesContent":["import React, { ChangeEvent, KeyboardEvent, useState } from \"react\";\nimport Greeting from \"./Greeting\";\nimport { UserType } from \"./HW3\";\n\ntype GreetingContainerPropsType = {\n  users: UserType[];\n  addUserCallback: (name: string) => void;\n};\n\nexport const pureAddUser = (\n  name: any,\n  setError: any,\n  setName: any,\n  addUserCallback: any\n) => {\n  // если имя пустое - показать ошибку, иначе - добавить юзера и очистить инпут\n};\n\nexport const pureOnBlur = (name: any, setError: any) => {\n  // если имя пустое - показать ошибку\n};\n\nexport const pureOnEnter = (e: any, addUser: any) => {\n  // если нажата кнопка Enter - добавить\n};\n\n// более простой и понятный для новичков\n// function GreetingContainer(props: GreetingPropsType) {\n\n// более современный и удобный для про :)\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({\n  users,\n  addUserCallback,\n}) => {\n  // деструктуризация пропсов\n  const [name, setName] = useState<string>(\"\");\n  const [error, setError] = useState<string>(\"\");\n\n  const setNameCallback = (e: React.ChangeEvent<HTMLInputElement>) => {\n    \n    const newName = e.target.value;\n    setName(newName); // need to fix\n\n    error && setError(\"\");\n  };\n  const addUser = () => {\n    pureAddUser(name, setError, setName, addUserCallback);\n  };\n\n  const onBlur = () => {\n    pureOnBlur(name, setError);\n  };\n\n  const onEnter = (e: any) => {\n    pureOnEnter(e, addUser);\n  };\n\n  const totalUsers = 0; // need to fix\n  const lastUserName = \"some name\"; // need to fix\n\n  return (\n    <Greeting\n      name={name}\n      setNameCallback={setNameCallback}\n      addUser={addUser}\n      onBlur={onBlur}\n      onEnter={onEnter}\n      error={error}\n      totalUsers={totalUsers}\n      lastUserName={lastUserName}\n    />\n  );\n};\n\nexport default GreetingContainer;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAgCC,QAAQ,QAAQ,OAAO;AACnE,OAAOC,QAAQ,MAAM,YAAY;AAAC;AAQlC,OAAO,MAAMC,WAAW,GAAG,CACzBC,IAAS,EACTC,QAAa,EACbC,OAAY,EACZC,eAAoB,KACjB;EACH;AAAA,CACD;AAED,OAAO,MAAMC,UAAU,GAAG,CAACJ,IAAS,EAAEC,QAAa,KAAK;EACtD;AAAA,CACD;AAED,OAAO,MAAMI,WAAW,GAAG,CAACC,CAAM,EAAEC,OAAY,KAAK;EACnD;AAAA,CACD;;AAED;AACA;;AAEA;AACA,MAAMC,iBAAuD,GAAG,QAG1D;EAAA;EAAA,IAH2D;IAC/DC,KAAK;IACLN;EACF,CAAC;EACC;EACA,MAAM,CAACH,IAAI,EAAEE,OAAO,CAAC,GAAGL,QAAQ,CAAS,EAAE,CAAC;EAC5C,MAAM,CAACa,KAAK,EAAET,QAAQ,CAAC,GAAGJ,QAAQ,CAAS,EAAE,CAAC;EAE9C,MAAMc,eAAe,GAAIL,CAAsC,IAAK;IAElE,MAAMM,OAAO,GAAGN,CAAC,CAACO,MAAM,CAACC,KAAK;IAC9BZ,OAAO,CAACU,OAAO,CAAC,CAAC,CAAC;;IAElBF,KAAK,IAAIT,QAAQ,CAAC,EAAE,CAAC;EACvB,CAAC;EACD,MAAMM,OAAO,GAAG,MAAM;IACpBR,WAAW,CAACC,IAAI,EAAEC,QAAQ,EAAEC,OAAO,EAAEC,eAAe,CAAC;EACvD,CAAC;EAED,MAAMY,MAAM,GAAG,MAAM;IACnBX,UAAU,CAACJ,IAAI,EAAEC,QAAQ,CAAC;EAC5B,CAAC;EAED,MAAMe,OAAO,GAAIV,CAAM,IAAK;IAC1BD,WAAW,CAACC,CAAC,EAAEC,OAAO,CAAC;EACzB,CAAC;EAED,MAAMU,UAAU,GAAG,CAAC,CAAC,CAAC;EACtB,MAAMC,YAAY,GAAG,WAAW,CAAC,CAAC;;EAElC,oBACE,QAAC,QAAQ;IACP,IAAI,EAAElB,IAAK;IACX,eAAe,EAAEW,eAAgB;IACjC,OAAO,EAAEJ,OAAQ;IACjB,MAAM,EAAEQ,MAAO;IACf,OAAO,EAAEC,OAAQ;IACjB,KAAK,EAAEN,KAAM;IACb,UAAU,EAAEO,UAAW;IACvB,YAAY,EAAEC;EAAa;IAAA;IAAA;IAAA;EAAA,QAC3B;AAEN,CAAC;AAAC,GA1CIV,iBAAuD;AAAA,KAAvDA,iBAAuD;AA4C7D,eAAeA,iBAAiB;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}