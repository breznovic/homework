{"ast":null,"code":"var _jsxFileName = \"/home/breznovic/React/homework/src/s2-homeworks/hw03/HW3.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport s2 from '../../s1-main/App.module.css';\nimport GreetingContainer from './GreetingContainer';\n\n/*\n* 1 - описать тип UserType\n* 2 - указать нужный тип в useState с users\n* 3 - дописать типы и логику функции pureAddUserCallback и проверить её тестами\n* 4 - в файле GreetingContainer.tsx дописать типизацию пропсов\n* 5 - в файле GreetingContainer.tsx указать нужные типы в useState с name и error\n* 6 - в файле GreetingContainer.tsx дописать тип и логику функции setNameCallback\n* 7 - в файле GreetingContainer.tsx дописать логику функций pureAddUser, pureOnBlur, pureOnEnter и проверить их тестами\n* 8 - в файле GreetingContainer.tsx вычислить количество добавленных и имя последнего (totalUsers, lastUserName)\n* 9 - в файле Greeting.tsx дописать типизацию пропсов\n* 10 - в файле Greeting.tsx вычислить inputClass в зависимости от наличия ошибки\n* 11 - сделать стили в соответствии с дизайном\n* */\n\n// types\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const pureAddUserCallback = (name, setUsers, users) => {\n  // need to fix any\n  const user = {// need to fix\n  };\n  setUsers([...users, user]);\n};\nconst HW3 = () => {\n  _s();\n  const [users, setUsers] = useState([]); // need to fix any\n\n  const addUserCallback = name => {\n    // need to fix any\n    pureAddUserCallback(name, setUsers, users);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: 'hw3',\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: s2.hwTitle,\n      children: \"Homework #3\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: s2.hw,\n      children: /*#__PURE__*/_jsxDEV(GreetingContainer, {\n        users: users,\n        addUserCallback: addUserCallback\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n_s(HW3, \"gAXO2JN5F09+lSQAgkU4yvYNIT8=\");\n_c = HW3;\nexport default HW3;\nvar _c;\n$RefreshReg$(_c, \"HW3\");","map":{"version":3,"names":["React","useState","s2","GreetingContainer","pureAddUserCallback","name","setUsers","users","user","HW3","addUserCallback","hwTitle","hw"],"sources":["/home/breznovic/React/homework/src/s2-homeworks/hw03/HW3.tsx"],"sourcesContent":["import React, { useState } from 'react'\nimport { v1 } from 'uuid'\nimport s2 from '../../s1-main/App.module.css'\nimport GreetingContainer from './GreetingContainer'\n\n/*\n* 1 - описать тип UserType\n* 2 - указать нужный тип в useState с users\n* 3 - дописать типы и логику функции pureAddUserCallback и проверить её тестами\n* 4 - в файле GreetingContainer.tsx дописать типизацию пропсов\n* 5 - в файле GreetingContainer.tsx указать нужные типы в useState с name и error\n* 6 - в файле GreetingContainer.tsx дописать тип и логику функции setNameCallback\n* 7 - в файле GreetingContainer.tsx дописать логику функций pureAddUser, pureOnBlur, pureOnEnter и проверить их тестами\n* 8 - в файле GreetingContainer.tsx вычислить количество добавленных и имя последнего (totalUsers, lastUserName)\n* 9 - в файле Greeting.tsx дописать типизацию пропсов\n* 10 - в файле Greeting.tsx вычислить inputClass в зависимости от наличия ошибки\n* 11 - сделать стили в соответствии с дизайном\n* */\n\n// types\nexport type UserType = {\n    _id: any // need to fix any\n    name: any // need to fix any\n}\n\nexport const pureAddUserCallback = (name: any, setUsers: any, users: any) => { // need to fix any\n    const user = { // need to fix\n    }\n    setUsers([...users, user])\n}\n\nconst HW3 = () => {\n    const [users, setUsers] = useState<any>([]) // need to fix any\n\n    const addUserCallback = (name: any) => { // need to fix any\n        pureAddUserCallback(name, setUsers, users)\n    }\n\n    return (\n        <div id={'hw3'}>\n            <div className={s2.hwTitle}>Homework #3</div>\n            {/*для автоматической проверки дз (не менять)*/}\n\n            <div className={s2.hw}>\n                <GreetingContainer\n                    users={users}\n                    addUserCallback={addUserCallback}\n                />\n            </div>\n        </div>\n    )\n}\n\nexport default HW3\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAEvC,OAAOC,EAAE,MAAM,8BAA8B;AAC7C,OAAOC,iBAAiB,MAAM,qBAAqB;;AAEnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA;AAMA,OAAO,MAAMC,mBAAmB,GAAG,CAACC,IAAS,EAAEC,QAAa,EAAEC,KAAU,KAAK;EAAE;EAC3E,MAAMC,IAAI,GAAG,CAAE;EAAA,CACd;EACDF,QAAQ,CAAC,CAAC,GAAGC,KAAK,EAAEC,IAAI,CAAC,CAAC;AAC9B,CAAC;AAED,MAAMC,GAAG,GAAG,MAAM;EAAA;EACd,MAAM,CAACF,KAAK,EAAED,QAAQ,CAAC,GAAGL,QAAQ,CAAM,EAAE,CAAC,EAAC;;EAE5C,MAAMS,eAAe,GAAIL,IAAS,IAAK;IAAE;IACrCD,mBAAmB,CAACC,IAAI,EAAEC,QAAQ,EAAEC,KAAK,CAAC;EAC9C,CAAC;EAED,oBACI;IAAK,EAAE,EAAE,KAAM;IAAA,wBACX;MAAK,SAAS,EAAEL,EAAE,CAACS,OAAQ;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAkB,eAG7C;MAAK,SAAS,EAAET,EAAE,CAACU,EAAG;MAAA,uBAClB,QAAC,iBAAiB;QACd,KAAK,EAAEL,KAAM;QACb,eAAe,EAAEG;MAAgB;QAAA;QAAA;QAAA;MAAA;IACnC;MAAA;MAAA;MAAA;IAAA,QACA;EAAA;IAAA;IAAA;IAAA;EAAA,QACJ;AAEd,CAAC;AAAA,GApBKD,GAAG;AAAA,KAAHA,GAAG;AAsBT,eAAeA,GAAG;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}