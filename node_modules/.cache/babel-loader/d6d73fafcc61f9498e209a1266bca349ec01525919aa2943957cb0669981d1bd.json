{"ast":null,"code":"import _objectSpread from\"/home/breznovic/React/homework/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"/home/breznovic/React/homework/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _objectWithoutProperties from\"/home/breznovic/React/homework/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";var _excluded=[\"autoFocus\",\"onBlur\",\"onEnter\",\"spanProps\"],_excluded2=[\"children\",\"onDoubleClick\",\"className\",\"defaultText\"];import React,{useState}from'react';import s from'./SuperEditableSpan.module.css';import SuperInputText from'../../../hw04/common/c1-SuperInputText/SuperInputText';import editIcon from'./editIcon.svg';// тип пропсов обычного инпута\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var SuperEditableSpan=function SuperEditableSpan(_ref){var autoFocus=_ref.autoFocus,onBlur=_ref.onBlur,onEnter=_ref.onEnter,spanProps=_ref.spanProps,restProps=_objectWithoutProperties(_ref,_excluded);var _useState=useState(false),_useState2=_slicedToArray(_useState,2),editMode=_useState2[0],setEditMode=_useState2[1];var _ref2=spanProps||{},children=_ref2.children,onDoubleClick=_ref2.onDoubleClick,className=_ref2.className,defaultText=_ref2.defaultText,restSpanProps=_objectWithoutProperties(_ref2,_excluded2);var onEnterCallback=function onEnterCallback(){// выключить editMode при нажатии Enter // делают студенты\nsetEditMode(false);onEnter===null||onEnter===void 0?void 0:onEnter();};var onBlurCallback=function onBlurCallback(e){// выключить editMode при нажатии за пределами инпута // делают студенты\nsetEditMode(false);onBlur===null||onBlur===void 0?void 0:onBlur(e);};var onDoubleClickCallBack=function onDoubleClickCallBack(e){// включить editMode при двойном клике // делают студенты\nsetEditMode(true);onDoubleClick===null||onDoubleClick===void 0?void 0:onDoubleClick(e);};var spanClassName=s.span+(className?' '+className:'');return/*#__PURE__*/_jsx(_Fragment,{children:editMode?/*#__PURE__*/_jsx(SuperInputText,_objectSpread({autoFocus:autoFocus||true,onBlur:onBlurCallback,onEnter:onEnterCallback,className:s.input},restProps)):/*#__PURE__*/_jsxs(\"div\",{className:s.spanBlock,children:[/*#__PURE__*/_jsx(\"img\",{src:editIcon,className:s.pen,alt:'edit'}),/*#__PURE__*/_jsx(\"span\",_objectSpread(_objectSpread({onDoubleClick:onDoubleClickCallBack,className:spanClassName},restSpanProps),{},{children:children||restProps.value||defaultText}))]})});};export default SuperEditableSpan;","map":{"version":3,"names":["React","useState","s","SuperInputText","editIcon","SuperEditableSpan","autoFocus","onBlur","onEnter","spanProps","restProps","editMode","setEditMode","children","onDoubleClick","className","defaultText","restSpanProps","onEnterCallback","onBlurCallback","e","onDoubleClickCallBack","spanClassName","span","input","spanBlock","pen","value"],"sources":["/home/breznovic/React/homework/src/s2-homeworks/hw06/common/c4-SuperEditableSpan/SuperEditableSpan.tsx"],"sourcesContent":["import React, {\n    DetailedHTMLProps,\n    InputHTMLAttributes,\n    HTMLAttributes,\n    useState,\n} from 'react'\nimport s from './SuperEditableSpan.module.css'\nimport SuperInputText from '../../../hw04/common/c1-SuperInputText/SuperInputText'\nimport editIcon from './editIcon.svg'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>,\n    HTMLInputElement>\n// тип пропсов обычного спана\ntype DefaultSpanPropsType = DetailedHTMLProps<HTMLAttributes<HTMLSpanElement>,\n    HTMLSpanElement>\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута, кроме type\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperEditableSpanType = Omit<DefaultInputPropsType, 'type'> & {\n    // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n\n    spanProps?: DefaultSpanPropsType  & {defaultText?: string}// пропсы для спана\n}\n\nconst SuperEditableSpan: React.FC<SuperEditableSpanType> = (\n    {\n        autoFocus,\n        onBlur,\n        onEnter,\n        spanProps,\n\n        ...restProps // все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const [editMode, setEditMode] = useState<boolean>(false)\n    const {children, onDoubleClick, className, defaultText, ...restSpanProps} =\n    spanProps || {}\n\n    const onEnterCallback = () => {\n        // выключить editMode при нажатии Enter // делают студенты\n        setEditMode(false)\n        onEnter?.()\n    }\n    const onBlurCallback = (e: React.FocusEvent<HTMLInputElement>) => {\n        // выключить editMode при нажатии за пределами инпута // делают студенты\n        setEditMode(false)\n        onBlur?.(e)\n    }\n    const onDoubleClickCallBack = (\n        e: React.MouseEvent<HTMLSpanElement, MouseEvent>\n    ) => {\n        // включить editMode при двойном клике // делают студенты\n        setEditMode(true)\n        onDoubleClick?.(e)\n    }\n\n    const spanClassName = s.span\n        + (className ? ' ' + className : '')\n\n    return (\n        <>\n            {editMode ? (\n                <SuperInputText\n                    autoFocus={autoFocus || true}\n                    onBlur={onBlurCallback}\n                    onEnter={onEnterCallback}\n                    className={s.input}\n                    {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n                />\n            ) : (\n                <div className={s.spanBlock}>\n                    <img\n                        src={editIcon}\n                        className={s.pen}\n                        alt={'edit'}\n                    />\n                    <span\n                        onDoubleClick={onDoubleClickCallBack}\n                        className={spanClassName}\n                        {...restSpanProps}\n                    >\n                        {/*если нет захардкодженного текста для спана, то значение инпута*/}\n\n                        {children || restProps.value || defaultText}\n                    </span>\n                </div>\n            )}\n        </>\n    )\n}\n\nexport default SuperEditableSpan"],"mappings":"4eAAA,MAAOA,MAAK,EAIRC,QAAQ,KACL,OAAO,CACd,MAAOC,EAAC,KAAM,gCAAgC,CAC9C,MAAOC,eAAc,KAAM,uDAAuD,CAClF,MAAOC,SAAQ,KAAM,gBAAgB,CAErC;AAAA,6IAkBA,GAAMC,kBAAkD,CAAG,QAArDA,kBAAkD,MASnD,IAPGC,UAAS,MAATA,SAAS,CACTC,MAAM,MAANA,MAAM,CACNC,OAAO,MAAPA,OAAO,CACPC,SAAS,MAATA,SAAS,CAENC,SAAS,0CAGhB,cAAgCT,QAAQ,CAAU,KAAK,CAAC,wCAAjDU,QAAQ,eAAEC,WAAW,eAC5B,UACAH,SAAS,EAAI,CAAC,CAAC,CADRI,QAAQ,OAARA,QAAQ,CAAEC,aAAa,OAAbA,aAAa,CAAEC,SAAS,OAATA,SAAS,CAAEC,WAAW,OAAXA,WAAW,CAAKC,aAAa,4CAGxE,GAAMC,gBAAe,CAAG,QAAlBA,gBAAe,EAAS,CAC1B;AACAN,WAAW,CAAC,KAAK,CAAC,CAClBJ,OAAO,SAAPA,OAAO,iBAAPA,OAAO,EAAI,CACf,CAAC,CACD,GAAMW,eAAc,CAAG,QAAjBA,eAAc,CAAIC,CAAqC,CAAK,CAC9D;AACAR,WAAW,CAAC,KAAK,CAAC,CAClBL,MAAM,SAANA,MAAM,iBAANA,MAAM,CAAGa,CAAC,CAAC,CACf,CAAC,CACD,GAAMC,sBAAqB,CAAG,QAAxBA,sBAAqB,CACvBD,CAAgD,CAC/C,CACD;AACAR,WAAW,CAAC,IAAI,CAAC,CACjBE,aAAa,SAAbA,aAAa,iBAAbA,aAAa,CAAGM,CAAC,CAAC,CACtB,CAAC,CAED,GAAME,cAAa,CAAGpB,CAAC,CAACqB,IAAI,EACrBR,SAAS,CAAG,GAAG,CAAGA,SAAS,CAAG,EAAE,CAAC,CAExC,mBACI,yBACKJ,QAAQ,cACL,KAAC,cAAc,gBACX,SAAS,CAAEL,SAAS,EAAI,IAAK,CAC7B,MAAM,CAAEa,cAAe,CACvB,OAAO,CAAED,eAAgB,CACzB,SAAS,CAAEhB,CAAC,CAACsB,KAAM,EACfd,SAAS,EACf,cAEF,aAAK,SAAS,CAAER,CAAC,CAACuB,SAAU,wBACxB,YACI,GAAG,CAAErB,QAAS,CACd,SAAS,CAAEF,CAAC,CAACwB,GAAI,CACjB,GAAG,CAAE,MAAO,EACd,cACF,yCACI,aAAa,CAAEL,qBAAsB,CACrC,SAAS,CAAEC,aAAc,EACrBL,aAAa,eAIhBJ,QAAQ,EAAIH,SAAS,CAACiB,KAAK,EAAIX,WAAW,GACxC,GAEd,EACF,CAEX,CAAC,CAED,cAAeX,kBAAiB"},"metadata":{},"sourceType":"module","externalDependencies":[]}